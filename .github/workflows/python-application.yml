# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      checks: write

    steps:
    # Step 1: Checkout the repository code
    - uses: actions/checkout@v4
    
    # Step 2: Set up Python 3.10
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f analyzers/CrowdstrikeFalcon_getUserLastPasswordSet/requirements.txt ]; then pip install -r analyzers/CrowdstrikeFalcon_getUserLastPasswordSet/requirements.txt; fi


    # Step 4: Lint with flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 5: Run tests with pytest
    - name: Test with pytest
      run: |
        # Run pytest and specify the directory or file to search for tests
        # Assuming tests are under the 'tests' directory or similar
        python -m pytest tests/ --verbose --junit-xml=junit.xml

    # Step 6: Publish Test Report
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: '**/junit.xml'
        detailed_summary: true
        include_passed: true